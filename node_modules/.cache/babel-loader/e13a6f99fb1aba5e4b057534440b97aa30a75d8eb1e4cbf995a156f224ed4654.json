{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\BLL\\\\bll\\\\src\\\\Components\\\\Posts\\\\Posts.jsx\",\n  _s = $RefreshSig$();\nimport { addPostAC } from '../../redux/reducers/postsRedecures';\nimport { useEffect, useRef } from \"react\";\nimport s from \"../Style/Style.css\";\nimport Post from \"./Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = props => {\n  _s();\n  let PostsCollection = props.state.map((posts, index) => {\n    return /*#__PURE__*/_jsxDEV(Post, {\n      text: posts.text\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this);\n  });\n  useEffect(() => {\n    crt.btn.current.addEventListener(\"click\", () => {\n      let newPost = {\n        id: props.state[props.state.length - 1].id + 1,\n        text: crt.text.current.value\n      };\n      props.dispatch(addPostAC(newPost));\n      props.reRender(props.getState(), props.getState, props.dispatch);\n    });\n  }, []);\n  let crt = {\n    text: useRef(null),\n    btn: useRef(null)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), PostsCollection, /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"\",\n      ref: crt.text,\n      className: s.text,\n      id: \"\",\n      cols: \"30\",\n      rows: \"10\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      ref: crt.btn,\n      className: s.btn,\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(Posts, \"jgU/RnOc5MmwVY837v/OWXMkhno=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["addPostAC","useEffect","useRef","s","Post","jsxDEV","_jsxDEV","Posts","props","_s","PostsCollection","state","map","posts","index","text","fileName","_jsxFileName","lineNumber","columnNumber","crt","btn","current","addEventListener","newPost","id","length","value","dispatch","reRender","getState","children","name","ref","className","cols","rows","_c","$RefreshReg$"],"sources":["C:/Users/user/BLL/bll/src/Components/Posts/Posts.jsx"],"sourcesContent":["import {addPostAC} from '../../redux/reducers/postsRedecures'\r\nimport { useEffect, useRef } from \"react\"\r\nimport s from \"../Style/Style.css\"\r\nimport Post from \"./Post\"\r\n\r\nconst Posts = (props) => {\r\n    let PostsCollection = props.state.map((posts, index) => {\r\n        return (\r\n            <Post key={index} text = {posts.text}/>\r\n        )\r\n    })\r\n    \r\n    useEffect(() => {\r\n        crt.btn.current.addEventListener(\"click\", () => {\r\n            let newPost = {\r\n                id: props.state[props.state.length - 1].id + 1,\r\n                text: crt.text.current.value\r\n            }\r\n            props.dispatch(addPostAC(newPost))\r\n            props.reRender(props.getState(),props.getState, props.dispatch )\r\n        })\r\n    }, [])\r\n\r\n    let crt = {\r\n        text: useRef(null),\r\n        btn: useRef(null)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Posts</h1>\r\n            {PostsCollection}\r\n            <textarea name=\"\" ref={crt.text}  className={s.text} id=\"\" cols=\"30\" rows=\"10\"></textarea>\r\n            <button ref={crt.btn} className={s.btn}>Post</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts"],"mappings":";;AAAA,SAAQA,SAAS,QAAO,qCAAqC;AAC7D,SAASC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,OAAOC,CAAC,MAAM,oBAAoB;AAClC,OAAOC,IAAI,MAAM,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,KAAK,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACrB,IAAIC,eAAe,GAAGF,KAAK,CAACG,KAAK,CAACC,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;IACpD,oBACIR,OAAA,CAACF,IAAI;MAAaW,IAAI,EAAIF,KAAK,CAACE;IAAK,GAA1BD,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAsB,CAAC;EAE/C,CAAC,CAAC;EAEFlB,SAAS,CAAC,MAAM;IACZmB,GAAG,CAACC,GAAG,CAACC,OAAO,CAACC,gBAAgB,CAAC,OAAO,EAAE,MAAM;MAC5C,IAAIC,OAAO,GAAG;QACVC,EAAE,EAAEjB,KAAK,CAACG,KAAK,CAACH,KAAK,CAACG,KAAK,CAACe,MAAM,GAAG,CAAC,CAAC,CAACD,EAAE,GAAG,CAAC;QAC9CV,IAAI,EAAEK,GAAG,CAACL,IAAI,CAACO,OAAO,CAACK;MAC3B,CAAC;MACDnB,KAAK,CAACoB,QAAQ,CAAC5B,SAAS,CAACwB,OAAO,CAAC,CAAC;MAClChB,KAAK,CAACqB,QAAQ,CAACrB,KAAK,CAACsB,QAAQ,CAAC,CAAC,EAACtB,KAAK,CAACsB,QAAQ,EAAEtB,KAAK,CAACoB,QAAS,CAAC;IACpE,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIR,GAAG,GAAG;IACNL,IAAI,EAAEb,MAAM,CAAC,IAAI,CAAC;IAClBmB,GAAG,EAAEnB,MAAM,CAAC,IAAI;EACpB,CAAC;EAED,oBACII,OAAA;IAAAyB,QAAA,gBACIzB,OAAA;MAAAyB,QAAA,EAAI;IAAK;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACbT,eAAe,eAChBJ,OAAA;MAAU0B,IAAI,EAAC,EAAE;MAACC,GAAG,EAAEb,GAAG,CAACL,IAAK;MAAEmB,SAAS,EAAE/B,CAAC,CAACY,IAAK;MAACU,EAAE,EAAC,EAAE;MAACU,IAAI,EAAC,IAAI;MAACC,IAAI,EAAC;IAAI;MAAApB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,eAC1Fb,OAAA;MAAQ2B,GAAG,EAAEb,GAAG,CAACC,GAAI;MAACa,SAAS,EAAE/B,CAAC,CAACkB,GAAI;MAAAU,QAAA,EAAC;IAAI;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEd,CAAC;AAAAV,EAAA,CA/BKF,KAAK;AAAA8B,EAAA,GAAL9B,KAAK;AAiCX,eAAeA,KAAK;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}